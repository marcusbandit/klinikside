# Task ID: 10
# Title: Implement 'Links' Page with Platform Detection
# Status: pending
# Dependencies: 2, 3
# Priority: high
# Description: Create the 'Links' page with links to external resources and implement platform detection for app store redirection.
# Details:
Develop the 'Links' page with links to the Patientportal and Min Læge app. Implement the JavaScript-based platform detection script as specified in the PRD to redirect users to the appropriate app store based on their device. For Patientportal, use the link: https://patientportal.egclinea.com/?id=613. For Min Læge app, use the Android link: https://play.google.com/store/apps/details?id=com.trifork.minlaege and iOS link: https://apps.apple.com/dk/app/min-l%C3%A6ge/id1445003295. On desktop, provide both app store links with appropriate icons. Ensure the page is responsive and follows the established design system.

# Test Strategy:
Test the platform detection script on different devices (Android, iOS, desktop) to verify correct redirection. Verify that all links work correctly. Test the page on different screen sizes to ensure responsiveness.

# Subtasks:
## 1. Create basic Links page structure and layout [pending]
### Dependencies: None
### Description: Set up the Links page component with responsive layout following the design system
### Details:
Implementation details:
1. Create a new Links page component in the pages directory
2. Implement the basic page structure with header, content area, and footer
3. Add responsive styling using the established design system (colors, typography, spacing)
4. Create placeholder sections for the Patientportal and Min Læge app links
5. Ensure the page layout is responsive across desktop, tablet, and mobile viewports
6. Add appropriate heading and descriptive text for each link section

Testing approach:
- Verify the page renders correctly without errors
- Test responsiveness across different screen sizes
- Ensure all styling matches the design system

## 2. Implement platform detection utility [pending]
### Dependencies: None
### Description: Create a JavaScript utility for detecting user device platform (iOS, Android, Desktop)
### Details:
Implementation details:
1. Create a new utility file for platform detection functions
2. Implement logic to detect iOS devices by checking for iPhone, iPad, and iPod in the user agent
3. Implement logic to detect Android devices by checking for Android in the user agent
4. Create a function that returns the platform type ('ios', 'android', or 'desktop')
5. Add unit tests for the platform detection logic
6. Document the utility functions with JSDoc comments

Testing approach:
- Write unit tests with different user agent strings to verify detection accuracy
- Test edge cases like tablets and unusual devices
- Manually test on different physical devices if possible

## 3. Implement Patientportal link section [pending]
### Dependencies: 10.1
### Description: Add the Patientportal link section with appropriate styling and behavior
### Details:
Implementation details:
1. Create a component for the Patientportal link section
2. Add the Patientportal link (https://patientportal.egclinea.com/?id=613)
3. Style the link as a prominent button following the design system
4. Add appropriate icon and descriptive text
5. Implement hover and focus states for better accessibility
6. Add appropriate aria attributes for screen readers
7. Ensure the link opens in a new tab with proper security attributes (rel="noopener noreferrer")

Testing approach:
- Verify the link works correctly and opens the correct URL
- Test keyboard navigation and focus states
- Verify the component is accessible using screen readers
- Check that the styling matches the design system

## 4. Implement Min Læge app links with platform-specific redirection [pending]
### Dependencies: 10.1, 10.2
### Description: Create the Min Læge app section with platform detection to show appropriate app store links
### Details:
Implementation details:
1. Create a component for the Min Læge app section
2. Integrate the platform detection utility from subtask 2
3. Implement conditional rendering logic to:
   - On iOS devices, prominently display the iOS App Store link (https://apps.apple.com/dk/app/min-l%C3%A6ge/id1445003295)
   - On Android devices, prominently display the Google Play Store link (https://play.google.com/store/apps/details?id=com.trifork.minlaege)
   - On desktop, display both links with appropriate app store icons
4. Add appropriate styling for the links following the design system
5. Implement hover and focus states for better accessibility
6. Add appropriate aria attributes for screen readers
7. Ensure links open in a new tab with proper security attributes

Testing approach:
- Test the platform detection by simulating different user agents
- Verify correct links are displayed based on the detected platform
- Test on actual iOS and Android devices if possible
- Verify desktop view shows both links with correct icons
- Test accessibility with keyboard navigation and screen readers

